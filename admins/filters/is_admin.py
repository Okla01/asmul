"""
Aiogram-—Ñ–∏–ª—å—Ç—Ä: –ø—Ä–æ–≤–µ—Ä—è–µ—Ç,
  ‚Äì –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ä–æ–ª—å, –Ω–∞—á–∏–Ω–∞—é—â–∞—è—Å—è —Å ¬´admin¬ª, **–∏–ª–∏**
  ‚Äì –ø—Ä–∏—à—ë–ª –ª–∏ –∞–ø–¥–µ–π—Ç –∏–∑ —Å–ª—É–∂–µ–±–Ω–æ–≥–æ —á–∞—Ç–∞ –∑–∞—è–≤–æ–∫ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é.
"""

from __future__ import annotations

from typing import Final

from aiogram import types
from aiogram.filters import BaseFilter

from db.database import get_user_role
from config import request_bot_user_chat_id       # ‚¨Ö –¥–æ–±–∞–≤–∏–ª–∏

_ADMIN_PREFIX: Final = "admin"    # admin, admin_readonly, admin_test –∏ —Ç. –ø.


class IsAdmin(BaseFilter):
    """
    –°—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–ª—è Message- –∏ CallbackQuery-—Ö—ç–Ω–¥–ª–µ—Ä–æ–≤, –µ—Å–ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ
    –æ–¥–Ω–æ –∏–∑ —É—Å–ª–æ–≤–∏–π:
      ‚Ä¢ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å —Ä–æ–ª—å, –Ω–∞—á–∏–Ω–∞—é—â–∞—è—Å—è —Å ¬´admin¬ª;
      ‚Ä¢ –∞–ø–¥–µ–π—Ç –ø—Ä–∏—à—ë–ª –∏–∑ —á–∞—Ç–∞ `request_bot_user_chat_id`
        (–∫–Ω–æ–ø–∫–∏ –≤ —á–∞—Ç–µ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è –∑–∞—è–≤–æ–∫).
    """

    __slots__ = ()

    async def __call__(self, event: types.Message | types.CallbackQuery) -> bool:  # type: ignore[override]
        # üëâ 1. –†–∞–∑—Ä–µ—à–∞–µ–º –≤—Å—ë, —á—Ç–æ –ø—Ä–∏—Ö–æ–¥–∏—Ç –∏–∑ —á–∞—Ç–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è –∑–∞—è–≤–æ–∫
        chat_id: int | None = None
        if isinstance(event, types.Message):
            chat_id = event.chat.id
        elif isinstance(event, types.CallbackQuery) and event.message:
            chat_id = event.message.chat.id

        if chat_id == request_bot_user_chat_id:
            return True

        # üëâ 2. –ò–Ω–∞—á–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        role: str | None = get_user_role(event.from_user.id)
        return (role or "").startswith(_ADMIN_PREFIX)
