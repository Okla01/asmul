"""
–î–∏–∞–ª–æ–≥-–∫–∞–ª–µ–Ω–¥–∞—Ä—å –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–∞—Ç –æ—Ç—á—ë—Ç–∞.

–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–≤–∞ —Ä–∞–∑–∞:
* —à–∞–≥ ¬´start¬ª  ‚Äì –Ω–∞—á–∞–ª—å–Ω–∞—è –¥–∞—Ç–∞;
* —à–∞–≥ ¬´end¬ª    ‚Äì –∫–æ–Ω–µ—á–Ω–∞—è –¥–∞—Ç–∞.

–î–∞—Ç–∞, –≤—ã–±—Ä–∞–Ω–Ω–∞—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –ø—Ä—è–º–æ –≤ FSM-–∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
(`RepFSM.ChooseStart` / `RepFSM.ChooseEnd`) –ø–æ–¥ –∫–ª—é—á–∞–º–∏ ``start`` / ``end``.
"""

from __future__ import annotations

from datetime import date

from aiogram.types import CallbackQuery
from aiogram_dialog import Dialog, DialogManager, Window
from aiogram_dialog.widgets.kbd import Calendar
from aiogram_dialog.widgets.text import Const

from admins.superadmin.reports.states import RepFSM

# --------------------------------------------------------------------------- #
#                                HANDLER                                      #
# --------------------------------------------------------------------------- #


async def on_pick(
    c: CallbackQuery,
    widget: Calendar,
    mgr: DialogManager,
    d: date,
) -> None:
    """
    Callback –∫–∞–ª–µ–Ω–¥–∞—Ä—è.

    ‚ûä –ë–µ—Ä—ë–º –ø–∞—Ä–∞–º–µ—Ç—Ä ``step`` –∏–∑ `mgr.start_data` (–æ–Ω —Ä–∞–≤–µ–Ω `"start"` –∏–ª–∏ `"end"`).
    ‚ûã –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –¥–∞—Ç—É –≤ FSM (`RepFSM`) —á–µ—Ä–µ–∑ `update_data`.
    ‚ûå –í—ã–∑—ã–≤–∞–µ–º `back_from_calendar` –∏–∑ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ –º–æ–¥—É–ª—è, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å
       —Ü–µ–ø–æ—á–∫—É —à–∞–≥–æ–≤.
    """
    step: str = mgr.start_data["step"]            # ‚Üê —Ä–∞–Ω—å—à–µ –±—ã–ª–æ mgr.dialog_data
    await mgr.start_data["fsm"].update_data(**{step: d.strftime("%d.%m.%Y")})

    from admins.superadmin.reports.handlers import back_from_calendar
    await back_from_calendar(c, mgr)              # –≤–µ—Ä–Ω—É—Ç—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
    await mgr.done()


# --------------------------------------------------------------------------- #
#                               WINDOWS                                       #
# --------------------------------------------------------------------------- #

_CHOOSE_TXT = Const("üóì –í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É:")

win_start = Window(_CHOOSE_TXT, Calendar(id="rep_cal_start", on_click=on_pick),
                   state=RepFSM.ChooseStart, parse_mode="HTML")

win_end = Window(_CHOOSE_TXT, Calendar(id="rep_cal_end", on_click=on_pick),
                 state=RepFSM.ChooseEnd, parse_mode="HTML")

rep_calendar_dialog = Dialog(win_start, win_end)
